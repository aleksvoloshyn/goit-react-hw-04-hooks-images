{"version":3,"sources":["Components/Modal/Modal.module.css","Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","Loader/Loader.module.css","Components/Searchbar/Searchbar.module.css","Components/Searchbar/Searchbar.jsx","Components/Modal/Modal.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.jsx","Loader/Loader.jsx","App.js","Components/Api/ImageApi.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","searchRequest","setSearchRequest","className","styles","event","preventDefault","toast","error","SearchForm","type","SearchForm__button","SearchForm__button__label","SearchForm__input","autoComplete","autoFocus","placeholder","onChange","e","currentTarget","value","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","handleClose","removeEventListener","code","createPortal","Modal__overlay","onClick","target","Modal__content","ImageGalleryItem","toggle","images","map","item","src","webformatURL","alt","tags","ImageGalleryItem__image","largeImageURL","uuidv4","ImageGallery","toggleModal","Button","Load","color","height","width","timeout","loader","App","showModal","setShowModal","pictures","setPictures","loading","setLoading","page","setPage","largeImageSrc","setLargeImageSrc","setAlt","getData","request","q","axios","get","GetImagesApi","then","response","status","trim","length","data","hits","scrollTo","top","documentElement","scrollHeight","behavior","Error","message","catch","console","autoClose","newestOnTop","undefined","dataset","largeimage","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,eAAiB,gC,mBCAlFD,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,wBAA0B,oD,mBCA1GD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,uCCA3BD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,mBAAqB,sCAAsC,0BAA4B,6CAA6C,kBAAoB,uC,qJCKxPC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAkBA,OACE,wBAAQC,UAAWC,IAAON,UAA1B,SACE,uBAAMC,SAda,SAAAM,GACrBA,EAAMC,iBAEDL,GAILC,EAAiB,IAEjBH,EAASE,IALPM,IAAMC,MAAM,+JAUoBL,UAAWC,IAAOK,WAAlD,UACE,wBAAQC,KAAK,SAASP,UAAWC,IAAOO,mBAAxC,SACE,sBAAMR,UAAWC,IAAOQ,0BAAxB,sBAGF,uBACET,UAAWC,IAAOS,kBAClBH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SA7Bc,SAAAC,GACpBhB,EAAiBgB,EAAEC,cAAcC,QA6B3BA,MAAOnB,U,iBChCXoB,EAAYC,SAASC,cAAc,eAEnCC,EAAQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACxBC,qBAAU,WACRC,OAAOC,iBAAiB,UAAWC,KAClC,IAEH,IAAMC,EAAc,WAClBH,OAAOI,oBAAoB,UAAWF,GACtCL,KAGIK,EAAgB,SAAAZ,GACL,WAAXA,EAAEe,MACJF,KAUJ,OAAOG,uBACL,qBAAK/B,UAAWC,IAAO+B,eAAgBC,QAPb,SAAA/B,GACtBA,EAAMc,gBAAkBd,EAAMgC,QAChCN,KAKF,SACE,qBAAK5B,UAAWC,IAAOkC,eAAvB,SAAwCZ,MAE1CL,I,yBC/BEkB,EAAmB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAClC,OACE,mCACGA,EAAOC,KAAI,SAAAC,GACV,OACE,oBAAIP,QAASI,EAAQrC,UAAU,mBAA/B,SACE,qBACEyC,IAAKD,EAAKE,aACVC,IAAKH,EAAKI,KACV5C,UAAWC,IAAO4C,wBAClB,kBAAiBL,EAAKM,iBAL6BC,qB,iBCJ3DC,EAAe,SAAC,GAA6B,IAA3BV,EAA0B,EAA1BA,OAAQW,EAAkB,EAAlBA,YAC9B,OACE,8BACE,oBAAIjD,UAAWC,IAAO+C,aAAtB,SACE,cAAC,EAAD,CAAkBX,OAAQY,EAAaX,OAAQA,S,iBCNvD,SAASY,EAAT,GAA8B,IAAZjB,EAAW,EAAXA,QAChB,OACE,wBAAQA,QAASA,EAASjC,UAAWC,IAAOiD,OAA5C,uB,2DCFEC,EAAO,WACX,OACE,cAAC,IAAD,CACE5C,KAAK,eACL6C,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,IACTvD,UAAWC,IAAOuD,U,YCSxB,IAkMeC,EAlMH,WACV,MAAkC5D,oBAAS,GAA3C,mBAAO6D,EAAP,KAAkBC,EAAlB,KACA,EAAgC9D,mBAAS,IAAzC,mBAAO+D,EAAP,KAAiBC,EAAjB,KACA,EAA0ChE,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOiE,EAAP,KAAgBC,EAAhB,KACA,EAAwBlE,mBAAS,GAAjC,mBAAOmE,EAAP,KAAaC,EAAb,KACA,EAA0CpE,mBAAS,IAAnD,mBAAOqE,EAAP,KAAsBC,EAAtB,KACA,EAAsBtE,mBAAS,IAA/B,mBAAO8C,EAAP,KAAYyB,EAAZ,KAEA5C,qBAAU,WACR6C,EAAQvE,EAAekE,EAAM,eAC5B,CAAClE,IAEJ0B,qBAAU,WACR6C,EAAQvE,EAAekE,EAAM,iBAC5B,CAACA,IAEJ,IAAMK,EAAU,SAACC,EAASN,EAAM9B,ICnClC,SAAsBqC,GAAc,IAAXP,EAAU,uDAAH,EAC9B,OAAOQ,IAAMC,IAAN,4EACgEF,EADhE,iBAC0EP,EAD1E,mCDmCLU,CAAaJ,EAASN,GACnBW,MAAK,SAAAC,GAUJ,GATwB,MAApBA,EAASC,QAAkB/E,EAAcgF,OAAOC,SACnC,cAAX7C,GACF2B,EAAY,YAAIe,EAASI,KAAKC,OAEjB,gBAAX/C,IACF2B,EAAY,GAAD,mBAAKD,GAAL,YAAkBgB,EAASI,KAAKC,QA/BrDxD,OAAOyD,SAAS,CACdC,IAAKhE,SAASiE,gBAAgBC,aAC9BC,SAAU,aAiCkB,MAApBV,EAASC,OACX,MAAM,IAAIU,MAAMX,EAASY,SAAW,yBAGvCC,OAAM,SAAUpF,GACfqF,QAAQrF,MAAM,QAASA,MAExBsE,MAAK,WACJZ,GAAW,OA0BjB,OACE,sBAAK/D,UAAU,MAAf,UACE,cAAC,IAAD,CAAgB2F,UAAW,IAAMC,aAAa,IAE9C,cAAC,EAAD,CAAWhG,SA1BU,SAAA0E,GACvBP,GAAW,GACXhE,EAAiBuE,MA0BM,IAApBV,EAASmB,QACR,cAAC,EAAD,CAAc9B,YAfS,SAAAlC,GAC3B4C,GAAcD,QACJmC,IAAN9E,IACFoD,EAAiBpD,EAAEmB,OAAO4D,QAAQC,YAClC3B,EAAOrD,EAAEmB,OAAOS,OAWmCL,OAAQsB,IAG1DF,GACC,cAAC,EAAD,CAAOpC,QAvBO,WAClBqC,GAAcD,IAsBV,SACE,8BACE,qBAAKjB,IAAKyB,EAAevB,IAAKA,QAInCmB,GAAW,cAAC,EAAD,IACXF,EAASmB,OAAS,GACjB,qBAAK/E,UAAW,YAAhB,SACE,cAACkD,EAAD,CAAQ8C,GAAG,WAAW/D,QArCR,WACpBgC,EAAQD,EAAO,GACfD,GAAW,YExDAkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxF,SAASyF,eAAe,SAM1BX,M","file":"static/js/main.1fee085a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__overlay\":\"Modal_Modal__overlay__29zwG\",\"Modal__content\":\"Modal_Modal__content__2UFHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__ef3sV\",\"ImageGalleryItem__image\":\"ImageGalleryItem_ImageGalleryItem__image__pyiQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2qP4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__ov8f2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1dll5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__26iyH\",\"SearchForm\":\"Searchbar_SearchForm__3F_7X\",\"SearchForm__button\":\"Searchbar_SearchForm__button__3-O2n\",\"SearchForm__button__label\":\"Searchbar_SearchForm__button__label__Y64OF\",\"SearchForm__input\":\"Searchbar_SearchForm__input__enEw1\"};","// import React, { Component } from 'react';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Searchbar.module.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [searchRequest, setSearchRequest] = useState('');\r\n\r\n  const onChangeInput = e => {\r\n    setSearchRequest(e.currentTarget.value);\r\n  };\r\n\r\n  const onSearchSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (!searchRequest) {\r\n      toast.error('Ввдите данные в строку поиска');\r\n      return;\r\n    }\r\n    setSearchRequest('');\r\n\r\n    onSubmit(searchRequest);\r\n  };\r\n\r\n  return (\r\n    <header className={styles.Searchbar}>\r\n      <form onSubmit={onSearchSubmit} className={styles.SearchForm}>\r\n        <button type=\"submit\" className={styles.SearchForm__button}>\r\n          <span className={styles.SearchForm__button__label}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={styles.SearchForm__input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={onChangeInput}\r\n          value={searchRequest}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { Searchbar };\r\n","// import React, { Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    window.removeEventListener('keydown', handleKeyDown);\r\n    onClose();\r\n  };\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={styles.Modal__overlay} onClick={handleBackdropClick}>\r\n      <div className={styles.Modal__content}>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { Modal };\r\n\r\n// class Modal extends Component {\r\n//   state = {};\r\n\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n\r\n//   handleKeyDown = e => {\r\n//     if (e.code === 'Escape') {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n\r\n//   handleBackdropClick = event => {\r\n//     if (event.currentTarget === event.target) {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     return createPortal(\r\n//       <div className={styles.Modal__overlay} onClick={this.handleBackdropClick}>\r\n//         <div className={styles.Modal__content}>{this.props.children}</div>\r\n//       </div>,\r\n//       modalRoot,\r\n//     );\r\n//   }\r\n// }\r\n","import PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ toggle, images }) => {\r\n  return (\r\n    <>\r\n      {images.map(item => {\r\n        return (\r\n          <li onClick={toggle} className=\"ImageGalleryItem\" key={uuidv4()}>\r\n            <img\r\n              src={item.webformatURL}\r\n              alt={item.tags}\r\n              className={styles.ImageGalleryItem__image}\r\n              data-largeimage={item.largeImageURL}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  toggle: PropTypes.func.isRequired,\r\n  images: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n};\r\n\r\nexport { ImageGalleryItem };\r\n","import PropTypes from 'prop-types';\r\nimport { ImageGalleryItem } from './../ImageGalleryItem/ImageGalleryItem';\r\n\r\nimport styles from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({ images, toggleModal }) => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.ImageGallery}>\r\n        <ImageGalleryItem toggle={toggleModal} images={images} />\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { ImageGallery };\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <button onClick={onClick} className={styles.Button}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport { Button };\r\n","import Loader from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\n\r\nconst Load = () => {\r\n  return (\r\n    <Loader\r\n      type=\"MutatingDots\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={500}\r\n      className={styles.loader}\r\n    />\r\n  );\r\n};\r\n\r\nexport { Load };\r\n","// import React, { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport { Searchbar } from './Components/Searchbar/Searchbar';\nimport { Modal } from './Components/Modal/Modal';\nimport { ImageGallery } from './Components/ImageGallery/ImageGallery';\nimport { Button } from './Components/Button/Button';\nimport { GetImagesApi } from './Components/Api/ImageApi';\nimport { Load } from './Loader/Loader';\nimport { ToastContainer } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nfunction scrollPageDown() {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n}\n\nconst App = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [pictures, setPictures] = useState([]);\n  const [searchRequest, setSearchRequest] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [largeImageSrc, setLargeImageSrc] = useState('');\n  const [alt, setAlt] = useState('');\n\n  useEffect(() => {\n    getData(searchRequest, page, 'searchBtn');\n  }, [searchRequest]);\n\n  useEffect(() => {\n    getData(searchRequest, page, 'loadMoreBtn');\n  }, [page]);\n\n  const getData = (request, page, target) => {\n    GetImagesApi(request, page)\n      .then(response => {\n        if (response.status === 200 && searchRequest.trim().length) {\n          if (target === 'searchBtn') {\n            setPictures([...response.data.hits]);\n          }\n          if (target === 'loadMoreBtn') {\n            setPictures([...pictures, ...response.data.hits]);\n            scrollPageDown();\n          }\n        }\n        if (response.status === 404) {\n          throw new Error(response.message || 'pictures not exist');\n        }\n      })\n      .catch(function (error) {\n        console.error('error', error);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  };\n\n  const getSearchRequest = request => {\n    setLoading(true);\n    setSearchRequest(request);\n  };\n\n  const pageIncrement = () => {\n    setPage(page + 1);\n    setLoading(true);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const setCurrentPictureSrc = e => {\n    setShowModal(!showModal);\n    if (e !== undefined) {\n      setLargeImageSrc(e.target.dataset.largeimage);\n      setAlt(e.target.alt);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <ToastContainer autoClose={2000} newestOnTop={true} />\n\n      <Searchbar onSubmit={getSearchRequest} />\n\n      {pictures.length !== 0 && (\n        <ImageGallery toggleModal={setCurrentPictureSrc} images={pictures} />\n      )}\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <div>\n            <img src={largeImageSrc} alt={alt} />\n          </div>\n        </Modal>\n      )}\n      {loading && <Load />}\n      {pictures.length > 0 && (\n        <div className={'container'}>\n          <Button id=\"loadmore\" onClick={pageIncrement} />\n        </div>\n      )}\n    </div>\n  );\n};\n// class App extends Component {\n//   state = {\n//     showModal: false,\n//     pictures: [],\n//     searchRequest: '',\n//     loading: false,\n//     error: '',\n//     page: 1,\n//     largeImageSrc: '',\n//     alt: '',\n//   };\n\n//   componentDidMount() {\n//     this.getData(this.state.searchRequest, this.state.page);\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.searchRequest !== this.state.searchRequest) {\n//       this.setState({ pictures: [] });\n//     }\n//   }\n\n//   getData = (request, page) => {\n//     GetImagesApi(request, page)\n//       .then(response => {\n//         if (response.status === 200 && this.state.searchRequest.trim().length) {\n//           this.setState({\n//             pictures: [...this.state.pictures, ...response.data.hits],\n//           });\n\n//           if (this.state.pictures.length === 0) {\n//             toast.error('По вашему запросу - НИЧЕГО НЕ НАЙДЕНО!');\n//           }\n//           scrollPageDown();\n//         }\n//         if (response.status === 404) {\n//           throw new Error(response.message || 'pictures not exist');\n//         }\n//       })\n//       .catch(function (error) {\n//         console.error('error', error);\n//       })\n//       .then(() => {\n//         this.setState({ loading: false });\n//       });\n//   };\n\n//   setSearchRequest = request => {\n//     this.setState({ loading: true });\n//     this.setState({ searchRequest: request });\n//     this.getData(request, this.state.page);\n//   };\n\n//   pageIncrement = () => {\n//     this.setState({ page: this.state.page + 1 });\n//     this.getData(this.state.searchRequest, this.state.page + 1);\n//     this.setState({ loading: true });\n\n//     return;\n//   };\n\n//   toggleModal = () => {\n//     this.setState({ showModal: !this.state.showModal });\n//   };\n\n//   setCurrentPictureSrc = e => {\n//     this.setState({ showModal: !this.state.showModal });\n//     if (e !== undefined) {\n//       this.setState({ largeImageSrc: e.target.dataset.largeimage });\n//       this.setState({ alt: e.target.alt });\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <ToastContainer autoClose={2000} newestOnTop={true} />\n\n//         <Searchbar onSubmit={this.setSearchRequest} />\n\n//         {this.state.pictures.length !== 0 && (\n//           <ImageGallery\n//             toggleModal={this.setCurrentPictureSrc}\n//             images={this.state.pictures}\n//           />\n//         )}\n\n//         {this.state.showModal && (\n//           <Modal onClose={this.toggleModal}>\n//             <div>\n//               <img src={this.state.largeImageSrc} alt={this.state.alt} />\n//             </div>\n//           </Modal>\n//         )}\n//         {this.state.loading && <Load />}\n//         {this.state.pictures.length > 0 && (\n//           <div className={'container'}>\n//             <Button onClick={this.pageIncrement} />\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","import axios from 'axios';\r\n\r\nfunction GetImagesApi(q, page = 1) {\r\n  return axios.get(\r\n    `https://pixabay.com/api/?key=22398165-fb0cc592f6e3d650fc4eef6c6&q=${q}&page=${page}&per_page=12&image_type=photo`,\r\n  );\r\n}\r\n\r\nexport { GetImagesApi };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}